# docker-composeで使用するバージョンを定義しています
version: '3.3'

#サービスの定義(この中にコンテナを作成)
services:
  # コンテナ名
  db:
    # 使用するイメージ
    image: mysql:5.6
    # マウントする箇所
    volumes:
      - db_data:/var/lib/mysql
    #起動失敗したときの再起動設定
    restart: always
    # .env で設定した db 接続情報
    environment:
      MYSQL_ROOT_USER: "${MYSQL_ROOT_USER}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    volumes:
      - /sessions
    ports:
      - "80:80"
    # 常にコンテナを自動起動させる
    restart: always
    # .env で設定した phpmyadmin 情報
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: "${PMA_HOST}"
      PMA_USER: "${PMA_USER}"
      PMA_PASSWORD: "${PMA_PASSWORD}"

  wordpress:
    #WordPressは、dbよりも後に起動するよう、起動順序が調整されます。
    depends_on:
      - db
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    #起動失敗したときの再起動設定
    restart: always
    # マウントする箇所
    volumes:
      # wp-content配下だけをリンクする
      - ./wp-content:/var/www/html/wp-content
    # .env で設定した wordpress 情報
    environment:
      WORDPRESS_DB_HOST: "${WORDPRESS_DB_HOST}"
      WORDPRESS_DB_USER: "${WORDPRESS_DB_USER}"
      WORDPRESS_DB_PASSWORD: "${WORDPRESS_DB_PASSWORD}"
      WORDPRESS_DB_NAME: "${WORDPRESS_DB_NAME}"

#  サービスが利用するボリュームを定義します
volumes:
  db_data:

# サービス(つまりコンテナ)が参加するネットワーク (こちらは省略可)
# networks: 

